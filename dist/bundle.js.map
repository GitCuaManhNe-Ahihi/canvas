{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;ACAa;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kCAAkC,mBAAO,CAAC,mCAAa;AACvD;;;;;;;;;;;ACNa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kBAAe;;;;;;;UCnHf;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA;UACA","sources":["webpack:///./style/index.scss?12e6","webpack:///./index.ts","webpack:///./particles.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/make namespace object","webpack:///webpack/before-startup","webpack:///webpack/startup","webpack:///webpack/after-startup"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar particles_1 = __importDefault(require(\"./particles\"));\n(0, particles_1.default)();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction Particles() {\n    var canvas = document.getElementById('canvas');\n    var ctx = canvas.getContext('2d');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    var particlesArray;\n    var mouse = {\n        x: null,\n        y: null,\n        radius: (canvas.height / 80) * (canvas.width / 80)\n    };\n    window.addEventListener('mousemove', function (e) {\n        mouse.x = e.x;\n        mouse.y = e.y;\n    });\n    var Particle = /** @class */ (function () {\n        function Particle(x, y, directionX, directionY, size, color) {\n            this.x = x;\n            this.y = y;\n            this.directionX = directionX;\n            this.directionY = directionY;\n            this.size = size;\n            this.color = color;\n        }\n        Particle.prototype.draw = function () {\n            if (ctx) {\n                ctx.beginPath();\n                ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2, false);\n                ctx.fillStyle = '#8C5523';\n                ctx.fill();\n            }\n        };\n        Particle.prototype.update = function () {\n            if (this.x > canvas.width || this.x < 0) {\n                this.directionX = -this.directionX;\n            }\n            if (this.y > canvas.height || this.y < 0) {\n                this.directionY = -this.directionY;\n            }\n            if (mouse.x && mouse.y) {\n                var dx = mouse.x - this.x;\n                var dy = mouse.y - this.y;\n                var distance = Math.sqrt(dx * dx + dy * dy);\n                if (distance < mouse.radius + this.size) {\n                    if (mouse.x < this.x && this.x < canvas.width - this.size * 10) {\n                        this.x += 10;\n                    }\n                    if (mouse.x > this.x && this.x > this.size * 10) {\n                        this.x -= 10;\n                    }\n                    if (mouse.y < this.y && this.y < canvas.height - this.size * 10) {\n                        this.y += 10;\n                    }\n                    if (mouse.y > this.y && this.y > this.size * 10) {\n                        this.y -= 10;\n                    }\n                }\n            }\n            this.x += this.directionX;\n            this.y += this.directionY;\n            this.draw();\n        };\n        return Particle;\n    }());\n    function init() {\n        particlesArray = [];\n        var numberOfParticles = (canvas.height * canvas.width) / 9000;\n        for (var i = 0; i < numberOfParticles; i++) {\n            var size = (Math.random() * 5) + 1;\n            var x = (Math.random() * ((innerWidth - size * 2) - (size * 2) + (size * 2)));\n            var y = (Math.random() * ((innerHeight - size * 2) - (size * 2) + (size * 2)));\n            var directionX = (Math.random() * 5) - 2.5;\n            var directionY = (Math.random() * 5) - 2.5;\n            var color = '#8c5523';\n            particlesArray.push(new Particle(x, y, directionX, directionY, size, color));\n        }\n    }\n    function animate() {\n        requestAnimationFrame(animate);\n        ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, innerWidth, innerHeight);\n        for (var i = 0; i < particlesArray.length; i++) {\n            particlesArray[i].update();\n        }\n        connect();\n    }\n    function connect() {\n        var opacity = 1;\n        for (var i = 0; i < particlesArray.length; i++) {\n            for (var j = 0; j < particlesArray.length; j++) {\n                var distance = (((particlesArray[i].x - particlesArray[j].x) * (particlesArray[i].x - particlesArray[j].x))\n                    + ((particlesArray[i].y - particlesArray[j].y) * (particlesArray[i].y - particlesArray[j].y)));\n                if (Math.abs(distance) < ((canvas.width / 7) * (canvas.height / 7))) {\n                    if (ctx) {\n                        opacity = 1 - distance / 2000;\n                        ctx.strokeStyle = \"rbga(140,58,31,\".concat(opacity, \")\");\n                        ctx.lineWidth = 1;\n                        ctx.beginPath();\n                        ctx.moveTo(particlesArray[i].x, particlesArray[i].y);\n                        ctx.lineTo(particlesArray[j].x, particlesArray[j].y);\n                        ctx.stroke();\n                    }\n                }\n            }\n        }\n    }\n    init();\n    window.addEventListener('resize', function () {\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        init();\n    });\n    animate();\n}\nexports.default = Particles;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n__webpack_require__(\"./style/index.scss\");\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./index.ts\");\n",""],"names":[],"sourceRoot":""}