{"version":3,"file":"bundle.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNA;;;;;;;;;ACAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2BAA2B;AAC/C,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/make namespace object","webpack:///./style/index.scss","webpack:///./index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// extracted by mini-css-extract-plugin\nexport {};","\"use strict\";\nvar canvas = document.getElementById('canvas');\nvar ctx = canvas.getContext('2d');\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\nvar particlesArray;\nvar mouse = {\n    x: null,\n    y: null,\n    radius: (canvas.height / 80) * (canvas.width / 80)\n};\nwindow.addEventListener('mousemove', function (e) {\n    mouse.x = e.x;\n    mouse.y = e.y;\n});\nvar Particle = /** @class */ (function () {\n    function Particle(x, y, directionX, directionY, size, color) {\n        this.x = x;\n        this.y = y;\n        this.directionX = directionX;\n        this.directionY = directionY;\n        this.size = size;\n        this.color = color;\n    }\n    Particle.prototype.draw = function () {\n        if (ctx) {\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2, false);\n            ctx.fillStyle = '#8C5523';\n            ctx.fill();\n        }\n    };\n    Particle.prototype.update = function () {\n        if (this.x > canvas.width || this.x < 0) {\n            this.directionX = -this.directionX;\n        }\n        if (this.y > canvas.height || this.y < 0) {\n            this.directionY = -this.directionY;\n        }\n        if (mouse.x && mouse.y) {\n            var dx = mouse.x - this.x;\n            var dy = mouse.y - this.y;\n            var distance = Math.sqrt(dx * dx + dy * dy);\n            if (distance < mouse.radius + this.size) {\n                if (mouse.x < this.x && this.x < canvas.width - this.size * 10) {\n                    this.x += 10;\n                }\n                if (mouse.x > this.x && this.x > this.size * 10) {\n                    this.x -= 10;\n                }\n                if (mouse.y < this.y && this.y < canvas.height - this.size * 10) {\n                    this.y += 10;\n                }\n                if (mouse.y > this.y && this.y > this.size * 10) {\n                    this.y -= 10;\n                }\n            }\n        }\n        this.x += this.directionX;\n        this.y += this.directionY;\n        this.draw();\n    };\n    return Particle;\n}());\nfunction init() {\n    particlesArray = [];\n    var numberOfParticles = (canvas.height * canvas.width) / 19000;\n    for (var i = 0; i < numberOfParticles; i++) {\n        var size = (Math.random() * 5) + 1;\n        var x = (Math.random() * ((innerWidth - size * 2) - (size * 2) + (size * 2)));\n        var y = (Math.random() * ((innerHeight - size * 2) - (size * 2) + (size * 2)));\n        var directionX = (Math.random() * 5) - 2.5;\n        var directionY = (Math.random() * 5) - 2.5;\n        var color = '#8c5523';\n        particlesArray.push(new Particle(x, y, directionX, directionY, size, color));\n    }\n}\nfunction animate() {\n    requestAnimationFrame(animate);\n    ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, innerWidth, innerHeight);\n    for (var i = 0; i < particlesArray.length; i++) {\n        particlesArray[i].update();\n    }\n    connect();\n}\nfunction connect() {\n    var opacity = 1;\n    for (var i = 0; i < particlesArray.length; i++) {\n        for (var j = 0; j < particlesArray.length; j++) {\n            var distance = (((particlesArray[i].x - particlesArray[j].x) * (particlesArray[i].x - particlesArray[j].x))\n                - ((particlesArray[i].y - particlesArray[j].y) * (particlesArray[i].y - particlesArray[j].y)));\n            if (distance < ((canvas.width / 7) * (canvas.height / 7)) && distance > 0) {\n                if (ctx) {\n                    opacity = 1 - distance / 2000;\n                    ctx.strokeStyle = \"rbga(140,58,31,\".concat(opacity, \")\");\n                    ctx.lineWidth = 1;\n                    ctx.beginPath();\n                    ctx.moveTo(particlesArray[i].x, particlesArray[i].y);\n                    ctx.lineTo(particlesArray[j].x, particlesArray[j].y);\n                    ctx.stroke();\n                }\n            }\n        }\n    }\n}\ninit();\nwindow.addEventListener('resize', function () {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    init();\n});\nanimate();\n"],"names":[],"sourceRoot":""}